{"ast":null,"code":"var _jsxFileName = \"/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/component/table.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DataFetcher from \"../component/dataFetcher\";\nimport TableHeader from \"../component/tableHeader\";\nimport TableRow from \"../component/tableRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  apiUrl,\n  itemName,\n  itemKeys\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const handleDataFetched = fetchedData => {\n    setData(fetchedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `${itemName}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(TableHeader, {\n        columns: itemKeys\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          item: item,\n          columns: itemKeys,\n          apiUrl: apiUrl,\n          onDataUpdate: handleDataFetched\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DataFetcher, {\n      apiUrl: apiUrl,\n      onDataFetched: handleDataFetched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(Table, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","DataFetcher","TableHeader","TableRow","jsxDEV","_jsxDEV","Table","apiUrl","itemName","itemKeys","_s","data","setData","handleDataFetched","fetchedData","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","columns","map","item","index","onDataUpdate","onDataFetched","_c","$RefreshReg$"],"sources":["/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/component/table.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport DataFetcher from \"../component/dataFetcher\";\nimport TableHeader from \"../component/tableHeader\";\nimport TableRow from \"../component/tableRow\";\n\nconst Table = ({ apiUrl, itemName, itemKeys }) => {\n    const [data, setData] = useState([]);\n\n    const handleDataFetched = (fetchedData) => {\n        setData(fetchedData);\n    };\n\n    return (\n        <div style={{ color: \"white\" }}>\n            <h2>{`${itemName}`}</h2>\n            <table>\n                <TableHeader columns={itemKeys} />\n                <tbody>\n                    {data.map((item, index) => (\n                        <TableRow\n                            key={index}\n                            item={item}\n                            columns={itemKeys}\n                            apiUrl={apiUrl}\n                            onDataUpdate={handleDataFetched}\n                        />\n                    ))}\n                </tbody>\n            </table>\n            <DataFetcher apiUrl={apiUrl} onDataFetched={handleDataFetched} />\n        </div>\n    );\n};\n\nexport default Table;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,KAAK,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMa,iBAAiB,GAAIC,WAAW,IAAK;IACvCF,OAAO,CAACE,WAAW,CAAC;EACxB,CAAC;EAED,oBACIT,OAAA;IAAKU,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC3BZ,OAAA;MAAAY,QAAA,EAAM,GAAET,QAAS;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBhB,OAAA;MAAAY,QAAA,gBACIZ,OAAA,CAACH,WAAW;QAACoB,OAAO,EAAEb;MAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClChB,OAAA;QAAAY,QAAA,EACKN,IAAI,CAACY,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAClBpB,OAAA,CAACF,QAAQ;UAELqB,IAAI,EAAEA,IAAK;UACXF,OAAO,EAAEb,QAAS;UAClBF,MAAM,EAAEA,MAAO;UACfmB,YAAY,EAAEb;QAAkB,GAJ3BY,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKb,CACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACRhB,OAAA,CAACJ,WAAW;MAACM,MAAM,EAAEA,MAAO;MAACoB,aAAa,EAAEd;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEd,CAAC;AAACX,EAAA,CA3BIJ,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}