{"ast":null,"code":"var _jsxFileName = \"/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/components/CreateButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"./Modal\";\nimport { toast } from \"sonner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateButtonComponent = ({\n  columns,\n  apiurl,\n  onSave\n}) => {\n  _s();\n  const initialData = Object.fromEntries(columns.map(column => [column.key, \"\"])); // Initialize with empty values\n  const [editedData, setEditedData] = useState(initialData);\n  const [isEditing, setIsEditing] = useState(false);\n  const handleEditClick = () => {\n    setEditedData(initialData); // Set initial data when editing starts\n    setIsEditing(true);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type\n    } = e.target;\n    setEditedData(prevData => ({\n      ...prevData,\n      [name]: type === \"number\" ? parseInt(value, 10) : value\n    }));\n  };\n  const handleSaveClick = async () => {\n    try {\n      // Remove 'id' key from editedData before sending the POST request\n      const {\n        id,\n        ...postData\n      } = editedData;\n      const response = await axios.post(apiurl, postData);\n      if (response.status === 201) {\n        toast.success(\"Item created successfully!\");\n        setIsEditing(false);\n        onSave(response.data); // Pass the newly created item to the parent component if needed\n      } else {\n        toast.error(\"Error creating item\");\n      }\n    } catch (error) {\n      toast.error(\"Error creating item\");\n    }\n  };\n  const handleCancelClick = () => {\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditClick,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: handleCancelClick,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [columns.filter(column => column.key !== \"id\").map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: column.key,\n            children: column.header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 37\n          }, this), column.type === \"textarea\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: column.key,\n            name: column.key,\n            value: editedData[column.key] || \"\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: column.type,\n            id: column.key,\n            name: column.key,\n            value: editedData[column.key] || \"\",\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 41\n          }, this)]\n        }, column.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSaveClick,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancelClick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(CreateButtonComponent, \"GfWpIdj1zrUaZVAxIwpZHa5iF6o=\");\n_c = CreateButtonComponent;\nexport default CreateButtonComponent;\nvar _c;\n$RefreshReg$(_c, \"CreateButtonComponent\");","map":{"version":3,"names":["React","useState","axios","Modal","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateButtonComponent","columns","apiurl","onSave","_s","initialData","Object","fromEntries","map","column","key","editedData","setEditedData","isEditing","setIsEditing","handleEditClick","handleInputChange","e","name","value","type","target","prevData","parseInt","handleSaveClick","id","postData","response","post","status","success","data","error","handleCancelClick","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","filter","htmlFor","header","onChange","_c","$RefreshReg$"],"sources":["/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/components/CreateButton.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"./Modal\";\nimport { toast } from \"sonner\";\n\nconst CreateButtonComponent = ({ columns, apiurl, onSave }) => {\n    const initialData = Object.fromEntries(\n        columns.map((column) => [column.key, \"\"])\n    ); // Initialize with empty values\n    const [editedData, setEditedData] = useState(initialData);\n    const [isEditing, setIsEditing] = useState(false);\n\n    const handleEditClick = () => {\n        setEditedData(initialData); // Set initial data when editing starts\n        setIsEditing(true);\n    };\n\n    const handleInputChange = (e) => {\n        const { name, value, type } = e.target;\n        setEditedData((prevData) => ({\n            ...prevData,\n            [name]: type === \"number\" ? parseInt(value, 10) : value,\n        }));\n    };\n\n    const handleSaveClick = async () => {\n        try {\n            // Remove 'id' key from editedData before sending the POST request\n            const { id, ...postData } = editedData;\n\n            const response = await axios.post(apiurl, postData);\n\n            if (response.status === 201) {\n                toast.success(\"Item created successfully!\");\n                setIsEditing(false);\n                onSave(response.data); // Pass the newly created item to the parent component if needed\n            } else {\n                toast.error(\"Error creating item\");\n            }\n        } catch (error) {\n            toast.error(\"Error creating item\");\n        }\n    };\n\n    const handleCancelClick = () => {\n        setIsEditing(false);\n    };\n\n    return (\n        <>\n            <button onClick={handleEditClick}>Create</button>\n            {isEditing && (\n                <Modal onClose={handleCancelClick}>\n                    <form>\n                        {columns\n                            .filter((column) => column.key !== \"id\")\n                            .map((column) => (\n                                <div key={column.key}>\n                                    <label htmlFor={column.key}>\n                                        {column.header}\n                                    </label>\n                                    {column.type === \"textarea\" ? (\n                                        <textarea\n                                            id={column.key}\n                                            name={column.key}\n                                            value={editedData[column.key] || \"\"}\n                                            onChange={handleInputChange}\n                                        />\n                                    ) : (\n                                        <input\n                                            type={column.type}\n                                            id={column.key}\n                                            name={column.key}\n                                            value={editedData[column.key] || \"\"}\n                                            onChange={handleInputChange}\n                                        />\n                                    )}\n                                </div>\n                            ))}\n                        <button type=\"button\" onClick={handleSaveClick}>\n                            Save\n                        </button>\n                        <button type=\"button\" onClick={handleCancelClick}>\n                            Cancel\n                        </button>\n                    </form>\n                </Modal>\n            )}\n        </>\n    );\n};\n\nexport default CreateButtonComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}