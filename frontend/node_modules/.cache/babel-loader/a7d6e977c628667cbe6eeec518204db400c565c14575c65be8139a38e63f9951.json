{"ast":null,"code":"var _jsxFileName = \"/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/components/Modal.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditModal = ({\n  show,\n  onHide,\n  row,\n  columns,\n  onUpdate\n}) => {\n  _s();\n  const [editedData, setEditedData] = useState({\n    ...row\n  });\n  const handleInputChange = (key, value) => {\n    setEditedData({\n      ...editedData,\n      [key]: value\n    });\n  };\n  const handleSaveClick = () => {\n    onUpdate(editedData);\n    onHide(); // Close the modal after saving\n  };\n\n  return /*#__PURE__*/_jsxDEV(CustomModal, {\n    show: show,\n    onClose: onHide,\n    children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: column.header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this), column.type === \"textarea\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editedData[column.key],\n        onChange: e => handleInputChange(column.key, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: column.type,\n        value: editedData[column.key],\n        onChange: e => handleInputChange(column.key, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveClick,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(EditModal, \"fi0YYR1yAAxKVbpdYq3oL/k2WzY=\");\n_c = EditModal;\nexport default EditModal;\nvar _c;\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"names":["React","Modal","Button","jsxDEV","_jsxDEV","EditModal","show","onHide","row","columns","onUpdate","_s","editedData","setEditedData","useState","handleInputChange","key","value","handleSaveClick","CustomModal","onClose","children","map","column","index","header","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/components/Modal.jsx"],"sourcesContent":["import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst EditModal = ({ show, onHide, row, columns, onUpdate }) => {\n    const [editedData, setEditedData] = useState({ ...row });\n\n    const handleInputChange = (key, value) => {\n        setEditedData({ ...editedData, [key]: value });\n    };\n\n    const handleSaveClick = () => {\n        onUpdate(editedData);\n        onHide(); // Close the modal after saving\n    };\n\n    return (\n        <CustomModal show={show} onClose={onHide}>\n            {columns.map((column, index) => (\n                <div key={index}>\n                    <label>{column.header}</label>\n                    {column.type === \"textarea\" ? (\n                        <textarea\n                            value={editedData[column.key]}\n                            onChange={(e) =>\n                                handleInputChange(column.key, e.target.value)\n                            }\n                        />\n                    ) : (\n                        <input\n                            type={column.type}\n                            value={editedData[column.key]}\n                            onChange={(e) =>\n                                handleInputChange(column.key, e.target.value)\n                            }\n                        />\n                    )}\n                </div>\n            ))}\n            <button onClick={handleSaveClick}>Save Changes</button>\n        </CustomModal>\n    );\n};\n\nexport default EditModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,GAAG;EAAEC,OAAO;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC;IAAE,GAAGN;EAAI,CAAC,CAAC;EAExD,MAAMO,iBAAiB,GAAGA,CAACC,GAAG,EAAEC,KAAK,KAAK;IACtCJ,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAE,CAACI,GAAG,GAAGC;IAAM,CAAC,CAAC;EAClD,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1BR,QAAQ,CAACE,UAAU,CAAC;IACpBL,MAAM,CAAC,CAAC,CAAC,CAAC;EACd,CAAC;;EAED,oBACIH,OAAA,CAACe,WAAW;IAACb,IAAI,EAAEA,IAAK;IAACc,OAAO,EAAEb,MAAO;IAAAc,QAAA,GACpCZ,OAAO,CAACa,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACvBpB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QAAAiB,QAAA,EAAQE,MAAM,CAACE;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC7BN,MAAM,CAACO,IAAI,KAAK,UAAU,gBACvB1B,OAAA;QACIa,KAAK,EAAEL,UAAU,CAACW,MAAM,CAACP,GAAG,CAAE;QAC9Be,QAAQ,EAAGC,CAAC,IACRjB,iBAAiB,CAACQ,MAAM,CAACP,GAAG,EAAEgB,CAAC,CAACC,MAAM,CAAChB,KAAK;MAC/C;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,gBAEFzB,OAAA;QACI0B,IAAI,EAAEP,MAAM,CAACO,IAAK;QAClBb,KAAK,EAAEL,UAAU,CAACW,MAAM,CAACP,GAAG,CAAE;QAC9Be,QAAQ,EAAGC,CAAC,IACRjB,iBAAiB,CAACQ,MAAM,CAACP,GAAG,EAAEgB,CAAC,CAACC,MAAM,CAAChB,KAAK;MAC/C;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACJ;IAAA,GAjBKL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBV,CACR,CAAC,eACFzB,OAAA;MAAQ8B,OAAO,EAAEhB,eAAgB;MAAAG,QAAA,EAAC;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEtB,CAAC;AAAClB,EAAA,CAtCIN,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}