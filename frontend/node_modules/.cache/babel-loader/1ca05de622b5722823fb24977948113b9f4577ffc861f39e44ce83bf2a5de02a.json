{"ast":null,"code":"var _jsxFileName = \"/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/component/tableComponent/tableRow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DeleteButton from \"./deleteButton\";\nimport axios from \"axios\"; // Don't forget to import axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableRow = ({\n  item,\n  columns,\n  apiUrl,\n  onDataUpdate\n}) => {\n  _s();\n  const [isEditing, setEditing] = useState(false);\n  const [editedData, setEditedData] = useState(item);\n  const handleEdit = () => {\n    // Perform a PUT request to update the data\n    axios.put(`${apiUrl}/${item.id}`, editedData) // Assuming item.id is the unique identifier\n    .then(response => {\n      console.log(\"Data updated successfully:\", response.data);\n      setEditing(false);\n      onDataUpdate(); // You might need to fetch updated data from the server.\n    }).catch(error => {\n      console.error(\"Error updating data:\", error);\n    });\n  };\n  const handleSave = () => {\n    // Call your API endpoint to save editedData here (PUT request)\n    // Then setEditing(false) and update the table data using onDataUpdate\n    setEditing(false);\n    onDataUpdate(); // You might need to fetch updated data from the server.\n  };\n\n  const handleCancelEdit = () => {\n    setEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [columns.map((key, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n      children: typeof item[key] === \"boolean\" ? item[key] ? \"Yes\" : \"No\" : item[key]\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(DeleteButton, {\n        apiUrl: apiUrl,\n        id: item.id,\n        buttonText: \"Delete\",\n        onDataUpdate: onDataUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(TableRow, \"FjUfqOrP4768MynMbDbzcbWXyak=\");\n_c = TableRow;\nexport default TableRow;\nvar _c;\n$RefreshReg$(_c, \"TableRow\");","map":{"version":3,"names":["React","useState","DeleteButton","axios","jsxDEV","_jsxDEV","TableRow","item","columns","apiUrl","onDataUpdate","_s","isEditing","setEditing","editedData","setEditedData","handleEdit","put","id","then","response","console","log","data","catch","error","handleSave","handleCancelEdit","children","map","key","index","fileName","_jsxFileName","lineNumber","columnNumber","buttonText","_c","$RefreshReg$"],"sources":["/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/component/tableComponent/tableRow.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport DeleteButton from \"./deleteButton\";\n\nimport axios from \"axios\"; // Don't forget to import axios\n\nconst TableRow = ({ item, columns, apiUrl, onDataUpdate }) => {\n    const [isEditing, setEditing] = useState(false);\n    const [editedData, setEditedData] = useState(item);\n\n    const handleEdit = () => {\n        // Perform a PUT request to update the data\n        axios\n            .put(`${apiUrl}/${item.id}`, editedData) // Assuming item.id is the unique identifier\n            .then((response) => {\n                console.log(\"Data updated successfully:\", response.data);\n                setEditing(false);\n                onDataUpdate(); // You might need to fetch updated data from the server.\n            })\n            .catch((error) => {\n                console.error(\"Error updating data:\", error);\n            });\n    };\n\n    const handleSave = () => {\n        // Call your API endpoint to save editedData here (PUT request)\n        // Then setEditing(false) and update the table data using onDataUpdate\n        setEditing(false);\n        onDataUpdate(); // You might need to fetch updated data from the server.\n    };\n\n    const handleCancelEdit = () => {\n        setEditing(false);\n    };\n    return (\n        <tr>\n            {columns.map((key, index) => (\n                <td key={index}>\n                    {typeof item[key] === \"boolean\"\n                        ? item[key]\n                            ? \"Yes\"\n                            : \"No\"\n                        : item[key]}\n                </td>\n            ))}\n            <td>\n                <DeleteButton\n                    apiUrl={apiUrl}\n                    id={item.id}\n                    buttonText={\"Delete\"}\n                    onDataUpdate={onDataUpdate}\n                />\n            </td>\n        </tr>\n    );\n};\n\nexport default TableRow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAACM,IAAI,CAAC;EAElD,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrB;IACAb,KAAK,CACAc,GAAG,CAAE,GAAER,MAAO,IAAGF,IAAI,CAACW,EAAG,EAAC,EAAEJ,UAAU,CAAC,CAAC;IAAA,CACxCK,IAAI,CAAEC,QAAQ,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAACG,IAAI,CAAC;MACxDV,UAAU,CAAC,KAAK,CAAC;MACjBH,YAAY,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAK;MACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EACV,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACrB;IACA;IACAb,UAAU,CAAC,KAAK,CAAC;IACjBH,YAAY,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC;;EAED,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;IAC3Bd,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EACD,oBACIR,OAAA;IAAAuB,QAAA,GACKpB,OAAO,CAACqB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACpB1B,OAAA;MAAAuB,QAAA,EACK,OAAOrB,IAAI,CAACuB,GAAG,CAAC,KAAK,SAAS,GACzBvB,IAAI,CAACuB,GAAG,CAAC,GACL,KAAK,GACL,IAAI,GACRvB,IAAI,CAACuB,GAAG;IAAC,GALVC,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACP,CAAC,eACF9B,OAAA;MAAAuB,QAAA,eACIvB,OAAA,CAACH,YAAY;QACTO,MAAM,EAAEA,MAAO;QACfS,EAAE,EAAEX,IAAI,CAACW,EAAG;QACZkB,UAAU,EAAE,QAAS;QACrB1B,YAAY,EAAEA;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEb,CAAC;AAACxB,EAAA,CAjDIL,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAmDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}