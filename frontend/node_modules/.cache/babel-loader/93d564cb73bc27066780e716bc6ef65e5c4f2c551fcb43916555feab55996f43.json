{"ast":null,"code":"var _jsxFileName = \"/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/component/tableComponent/editableCells.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditableCell = ({\n  value,\n  onChange,\n  isEditing,\n  onSave\n}) => {\n  _s();\n  const inputRef = useRef(null);\n  const [inputValue, setInputValue] = useState(value);\n  useEffect(() => {\n    if (isEditing) {\n      setInputValue(value);\n    }\n  }, [isEditing, value]);\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleSaveClick = () => {\n    onSave(inputValue); // Call the onSave callback with the updated value\n  };\n\n  useEffect(() => {\n    if (isEditing) {\n      inputRef.current.focus();\n    }\n  }, [isEditing]);\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveClick,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : typeof value === \"boolean\" ? value ? \"Yes\" : \"No\" : value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(EditableCell, \"5OIbMalxpG1b1zOSQeHqh8x4U3M=\");\n_c = EditableCell;\nexport default EditableCell;\nvar _c;\n$RefreshReg$(_c, \"EditableCell\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EditableCell","value","onChange","isEditing","onSave","_s","inputRef","inputValue","setInputValue","handleInputChange","e","target","handleSaveClick","current","focus","children","ref","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/component/tableComponent/editableCells.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nconst EditableCell = ({ value, onChange, isEditing, onSave }) => {\n    const inputRef = useRef(null);\n    const [inputValue, setInputValue] = useState(value);\n\n    useEffect(() => {\n        if (isEditing) {\n            setInputValue(value);\n        }\n    }, [isEditing, value]);\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    };\n\n    const handleSaveClick = () => {\n        onSave(inputValue); // Call the onSave callback with the updated value\n    };\n\n    useEffect(() => {\n        if (isEditing) {\n            inputRef.current.focus();\n        }\n    }, [isEditing]);\n\n    return (\n        <td>\n            {isEditing ? (\n                <>\n                    <input\n                        ref={inputRef}\n                        type=\"text\"\n                        value={inputValue}\n                        onChange={handleInputChange}\n                    />\n                    <button onClick={handleSaveClick}>Save</button>\n                </>\n            ) : typeof value === \"boolean\" ? (\n                value ? (\n                    \"Yes\"\n                ) : (\n                    \"No\"\n                )\n            ) : (\n                value\n            )}\n        </td>\n    );\n};\n\nexport default EditableCell;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,SAAS;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAMC,QAAQ,GAAGb,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAACM,KAAK,CAAC;EAEnDP,SAAS,CAAC,MAAM;IACZ,IAAIS,SAAS,EAAE;MACXK,aAAa,CAACP,KAAK,CAAC;IACxB;EACJ,CAAC,EAAE,CAACE,SAAS,EAAEF,KAAK,CAAC,CAAC;EAEtB,MAAMQ,iBAAiB,GAAIC,CAAC,IAAK;IAC7BF,aAAa,CAACE,CAAC,CAACC,MAAM,CAACV,KAAK,CAAC;EACjC,CAAC;EAED,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC1BR,MAAM,CAACG,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC;;EAEDb,SAAS,CAAC,MAAM;IACZ,IAAIS,SAAS,EAAE;MACXG,QAAQ,CAACO,OAAO,CAACC,KAAK,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC;EAEf,oBACIN,OAAA;IAAAkB,QAAA,EACKZ,SAAS,gBACNN,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACIlB,OAAA;QACImB,GAAG,EAAEV,QAAS;QACdW,IAAI,EAAC,MAAM;QACXhB,KAAK,EAAEM,UAAW;QAClBL,QAAQ,EAAEO;MAAkB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFxB,OAAA;QAAQyB,OAAO,EAAEV,eAAgB;QAAAG,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACjD,CAAC,GACH,OAAOpB,KAAK,KAAK,SAAS,GAC1BA,KAAK,GACD,KAAK,GAEL,IACH,GAEDA;EACH;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAAChB,EAAA,CA/CIL,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAiDlB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}