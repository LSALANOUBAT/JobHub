{"ast":null,"code":"var _jsxFileName = \"/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/components/DataTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Table.css\";\nimport DeleteButtonComponent from \"./DeleteButton\";\nimport EditButtonComponent from \"./EditButton\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTableComponent = ({\n  data,\n  columns,\n  apiUrl,\n  onDataFetched\n}) => {\n  _s();\n  const [fetchedData, setFetchedData] = useState([]);\n  const [editingRowId, setEditingRowId] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [editingData, setEditingData] = useState(null);\n  useEffect(() => {\n    setFetchedData(data);\n  }, [data]);\n  const handleDataFetched = updatedData => {\n    setFetchedData(updatedData);\n    onDataFetched(updatedData);\n  };\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = fetchedData.slice(indexOfFirstItem, indexOfLastItem);\n\n  // Logic to change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"dataTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        className: \"tableHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: column.header\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"infoRow\",\n          children: [columns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"infoRow\",\n            children: row[column.key]\n          }, columnIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(DeleteButtonComponent, {\n              id: row.id,\n              apiUrl: apiUrl,\n              column: columns,\n              dataFetching: handleDataFetched\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(EditButtonComponent, {\n              data: row,\n              columns: columns,\n              apiurl: apiUrl,\n              id: row.id,\n              onSave: handleDataFetched,\n              onEditClick: () => setIsModalVisible(true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, rowIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(DataTableComponent, \"BxzP92xUnL8k9GLKE0dFWPkNE/U=\");\n_c = DataTableComponent;\nexport default DataTableComponent;\nvar _c;\n$RefreshReg$(_c, \"DataTableComponent\");","map":{"version":3,"names":["React","useState","useEffect","DeleteButtonComponent","EditButtonComponent","Modal","jsxDEV","_jsxDEV","DataTableComponent","data","columns","apiUrl","onDataFetched","_s","fetchedData","setFetchedData","editingRowId","setEditingRowId","isModalVisible","setIsModalVisible","editingData","setEditingData","handleDataFetched","updatedData","indexOfLastItem","currentPage","itemsPerPage","indexOfFirstItem","currentItems","slice","paginate","pageNumber","setCurrentPage","children","className","map","column","index","header","fileName","_jsxFileName","lineNumber","columnNumber","row","rowIndex","columnIndex","key","id","dataFetching","apiurl","onSave","onEditClick","_c","$RefreshReg$"],"sources":["/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/components/DataTable.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Table.css\";\nimport DeleteButtonComponent from \"./DeleteButton\";\nimport EditButtonComponent from \"./EditButton\";\nimport Modal from \"./Modal\";\nconst DataTableComponent = ({ data, columns, apiUrl, onDataFetched }) => {\n    const [fetchedData, setFetchedData] = useState([]);\n    const [editingRowId, setEditingRowId] = useState(null);\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [editingData, setEditingData] = useState(null);\n\n    useEffect(() => {\n        setFetchedData(data);\n    }, [data]);\n\n    const handleDataFetched = (updatedData) => {\n        setFetchedData(updatedData);\n        onDataFetched(updatedData);\n    };\n\n    const indexOfLastItem = currentPage * itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    const currentItems = fetchedData.slice(indexOfFirstItem, indexOfLastItem);\n\n    // Logic to change page\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n    return (\n        <div>\n            <table className=\"dataTable\">\n                <thead className=\"tableHeader\">\n                    <tr>\n                        {columns.map((column, index) => (\n                            <th key={index}>{column.header}</th>\n                        ))}\n                        <th>delete</th>\n                        <th>Edit</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((row, rowIndex) => (\n                        <tr className=\"infoRow\" key={rowIndex}>\n                            {columns.map((column, columnIndex) => (\n                                <td className=\"infoRow\" key={columnIndex}>\n                                    {row[column.key]}\n                                </td>\n                            ))}\n                            <td>\n                                <DeleteButtonComponent\n                                    id={row.id}\n                                    apiUrl={apiUrl}\n                                    column={columns}\n                                    dataFetching={handleDataFetched}\n                                />\n                            </td>\n                            <td>\n                                <EditButtonComponent\n                                    data={row}\n                                    columns={columns}\n                                    apiurl={apiUrl}\n                                    id={row.id}\n                                    onSave={handleDataFetched}\n                                    onEditClick={() => setIsModalVisible(true)}\n                                />\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default DataTableComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}