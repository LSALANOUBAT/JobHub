{"ast":null,"code":"var _jsxFileName = \"/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/component/tableComponent/tableRow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // Import axios here\nimport EditableCell from \"./editableCells\";\nimport DeleteButton from \"./deleteButton\";\nimport EditButton from \"./editButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TableRow = ({\n  item,\n  columns,\n  apiUrl,\n  onDataUpdate\n}) => {\n  _s();\n  const [isEditing, setEditing] = useState(false);\n  const [editedData, setEditedData] = useState({});\n  const handleEdit = () => {\n    setEditing(true);\n  };\n  const handleSave = () => {\n    axios.put(`${apiUrl}/${item.id}`, editedData).then(response => {\n      console.log(\"Data updated successfully:\", response.data);\n      setEditing(false);\n    }).catch(error => {\n      console.error(\"Error updating data:\", error.message);\n    });\n  };\n  const handleInputChange = (key, value) => {\n    setEditedData(prevData => ({\n      ...prevData,\n      [key]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [columns.map((key, index) => /*#__PURE__*/_jsxDEV(EditableCell, {\n      value: editedData[key] // Pass the editedData to the EditableCell component\n      ,\n      onChange: value => handleInputChange(key, value) // Handle input changes\n      ,\n      isEditing: isEditing\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditing(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(EditButton, {\n        onEdit: handleEdit,\n        buttonText: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n        apiUrl: apiUrl,\n        id: item.id,\n        buttonText: \"Delete\",\n        onDataUpdate: onDataUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(TableRow, \"HllHXg7+dNM6GWqkSmKsXJxRkb8=\");\n_c = TableRow;\nexport default TableRow;\nvar _c;\n$RefreshReg$(_c, \"TableRow\");","map":{"version":3,"names":["React","useEffect","useState","axios","EditableCell","DeleteButton","EditButton","jsxDEV","_jsxDEV","Fragment","_Fragment","TableRow","item","columns","apiUrl","onDataUpdate","_s","isEditing","setEditing","editedData","setEditedData","handleEdit","handleSave","put","id","then","response","console","log","data","catch","error","message","handleInputChange","key","value","prevData","children","map","index","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onEdit","buttonText","_c","$RefreshReg$"],"sources":["/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/component/tableComponent/tableRow.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // Import axios here\nimport EditableCell from \"./editableCells\";\nimport DeleteButton from \"./deleteButton\";\nimport EditButton from \"./editButton\";\n\nconst TableRow = ({ item, columns, apiUrl, onDataUpdate }) => {\n    const [isEditing, setEditing] = useState(false);\n    const [editedData, setEditedData] = useState({});\n\n    const handleEdit = () => {\n        setEditing(true);\n    };\n\n    const handleSave = () => {\n        axios\n            .put(`${apiUrl}/${item.id}`, editedData)\n            .then((response) => {\n                console.log(\"Data updated successfully:\", response.data);\n                setEditing(false);\n            })\n            .catch((error) => {\n                console.error(\"Error updating data:\", error.message);\n            });\n    };\n\n    const handleInputChange = (key, value) => {\n        setEditedData((prevData) => ({\n            ...prevData,\n            [key]: value,\n        }));\n    };\n\n    return (\n        <tr>\n            {columns.map((key, index) => (\n                <EditableCell\n                    key={index}\n                    value={editedData[key]} // Pass the editedData to the EditableCell component\n                    onChange={(value) => handleInputChange(key, value)} // Handle input changes\n                    isEditing={isEditing}\n                />\n            ))}\n            <td>\n                {isEditing ? (\n                    <>\n                        <button onClick={handleSave}>Save</button>\n                        <button onClick={() => setEditing(false)}>\n                            Cancel\n                        </button>\n                    </>\n                ) : (\n                    <EditButton onEdit={handleEdit} buttonText={\"Edit\"} />\n                )}\n                <DeleteButton\n                    apiUrl={apiUrl}\n                    id={item.id}\n                    buttonText={\"Delete\"}\n                    onDataUpdate={onDataUpdate}\n                />\n            </td>\n        </tr>\n    );\n};\n\nexport default TableRow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}