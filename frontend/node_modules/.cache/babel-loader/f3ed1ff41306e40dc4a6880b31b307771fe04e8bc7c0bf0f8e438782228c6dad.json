{"ast":null,"code":"var _jsxFileName = \"/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/components/EditButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EditButtonComponent = ({\n  data,\n  keysToDisplay,\n  onSave\n}) => {\n  _s();\n  const [editedData, setEditedData] = useState(data);\n  const [isEditing, setIsEditing] = useState(false);\n  const handleEditClick = () => {\n    setEditedData(data);\n    setIsEditing(true);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditedData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSaveClick = () => {\n    setIsEditing(false);\n    onSave(editedData);\n  };\n  const handleCancelClick = () => {\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEditClick,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: handleCancelClick,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [keysToDisplay.filter(key => key !== \"id\").map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: key,\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: key,\n            name: key,\n            value: editedData[key],\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSaveClick,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCancelClick,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(EditButtonComponent, \"5bnxNebO2Yw3kurcw69PiIUXCHk=\");\n_c = EditButtonComponent;\nexport default EditButtonComponent;\nvar _c;\n$RefreshReg$(_c, \"EditButtonComponent\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","EditButtonComponent","data","keysToDisplay","onSave","_s","editedData","setEditedData","isEditing","setIsEditing","handleEditClick","handleInputChange","e","name","value","target","prevData","handleSaveClick","handleCancelClick","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","filter","key","map","htmlFor","type","id","onChange","_c","$RefreshReg$"],"sources":["/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/components/EditButton.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Modal from \"./Modal\";\n\nconst EditButtonComponent = ({ data, keysToDisplay, onSave }) => {\n    const [editedData, setEditedData] = useState(data);\n    const [isEditing, setIsEditing] = useState(false);\n\n    const handleEditClick = () => {\n        setEditedData(data);\n        setIsEditing(true);\n    };\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setEditedData((prevData) => ({\n            ...prevData,\n            [name]: value,\n        }));\n    };\n\n    const handleSaveClick = () => {\n        setIsEditing(false);\n        onSave(editedData);\n    };\n\n    const handleCancelClick = () => {\n        setIsEditing(false);\n    };\n\n    return (\n        <>\n            <button onClick={handleEditClick}>Edit</button>\n            {isEditing && (\n                <Modal onClose={handleCancelClick}>\n                    <form>\n                        {keysToDisplay\n                            .filter((key) => key !== \"id\")\n                            .map((key) => (\n                                <div key={key}>\n                                    <label htmlFor={key}>{key}</label>\n                                    <input\n                                        type=\"text\"\n                                        id={key}\n                                        name={key}\n                                        value={editedData[key]}\n                                        onChange={handleInputChange}\n                                    />\n                                </div>\n                            ))}\n                        <button type=\"button\" onClick={handleSaveClick}>\n                            Save\n                        </button>\n                        <button type=\"button\" onClick={handleCancelClick}>\n                            Cancel\n                        </button>\n                    </form>\n                </Modal>\n            )}\n        </>\n    );\n};\n\nexport default EditButtonComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}