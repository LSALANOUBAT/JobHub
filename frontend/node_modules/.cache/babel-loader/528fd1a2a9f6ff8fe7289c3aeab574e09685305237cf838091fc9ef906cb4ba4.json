{"ast":null,"code":"var _jsxFileName = \"/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/components/Modal.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditModal = ({\n  show,\n  onHide,\n  row,\n  columns,\n  onUpdate\n}) => {\n  _s();\n  const [editedData, setEditedData] = React.useState({\n    ...row\n  });\n  const handleInputChange = (key, value) => {\n    setEditedData({\n      ...editedData,\n      [key]: value\n    });\n  };\n  const handleSaveClick = () => {\n    onUpdate(editedData);\n    onHide(); // Close the modal after saving\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onHide,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Edit Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: column.header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), column.type === \"textarea\" ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedData[column.key],\n          onChange: e => handleInputChange(column.key, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          type: column.type,\n          value: editedData[column.key],\n          onChange: e => handleInputChange(column.key, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSaveClick,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(EditModal, \"fi0YYR1yAAxKVbpdYq3oL/k2WzY=\");\n_c = EditModal;\nexport default EditModal;\nvar _c;\n$RefreshReg$(_c, \"EditModal\");","map":{"version":3,"names":["React","Modal","Button","jsxDEV","_jsxDEV","EditModal","show","onHide","row","columns","onUpdate","_s","editedData","setEditedData","useState","handleInputChange","key","value","handleSaveClick","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","map","column","index","header","type","onChange","e","target","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/home/louis/T-WEB-501-PAR_50/frontend/src/pages/monitor/components/Modal.jsx"],"sourcesContent":["import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst EditModal = ({ show, onHide, row, columns, onUpdate }) => {\n    const [editedData, setEditedData] = React.useState({ ...row });\n\n    const handleInputChange = (key, value) => {\n        setEditedData({ ...editedData, [key]: value });\n    };\n\n    const handleSaveClick = () => {\n        onUpdate(editedData);\n        onHide(); // Close the modal after saving\n    };\n\n    return (\n        <Modal show={show} onHide={onHide}>\n            <Modal.Header closeButton>\n                <Modal.Title>Edit Row</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {columns.map((column, index) => (\n                    <div key={index}>\n                        <label>{column.header}</label>\n                        {column.type === \"textarea\" ? (\n                            <textarea\n                                value={editedData[column.key]}\n                                onChange={(e) =>\n                                    handleInputChange(\n                                        column.key,\n                                        e.target.value\n                                    )\n                                }\n                            />\n                        ) : (\n                            <input\n                                type={column.type}\n                                value={editedData[column.key]}\n                                onChange={(e) =>\n                                    handleInputChange(\n                                        column.key,\n                                        e.target.value\n                                    )\n                                }\n                            />\n                        )}\n                    </div>\n                ))}\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onHide}>\n                    Close\n                </Button>\n                <Button variant=\"primary\" onClick={handleSaveClick}>\n                    Save Changes\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default EditModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}